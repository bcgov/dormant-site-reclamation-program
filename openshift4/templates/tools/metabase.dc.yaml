kind: Template
apiVersion: v1
metadata:
  name: dsrp-metabase-dc
parameters:
  - name: CPU_LIMIT
    value: 500m
  - name: MEMORY_LIMIT
    value: 2Gi
  - name: CPU_REQUEST
    value: 200m
  - name: MEMORY_REQUEST
    value: 1Gi
  - name: ENVIRONMENT_NAME
    value: dev
  - name: NAME
    displayName: Object names
    description: The name of the OpenShift objects.
    value: metabase
    required: true
  - name: NAME_DATABASE
    value: metabase-postgres
    required: true
  - name: APPLICATION_DOMAIN
    required: true
  - name: SUFFIX
    displayName: Name Suffix
    description: A suffix appended to all objects
    required: true
  - name: VERSION
    required: true
  - name: METABASE_SECRET_NAME
    value: template.dsrp-metabase-key
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      annotations:
        description: Exposes and load balances the application pods
    spec:
      ports:
        - name: 3000-tcp
          protocol: TCP
          port: 3000
          targetPort: 3000
      selector:
        name: ${NAME}${SUFFIX}
      type: ClusterIP
      sessionAffinity: None
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
    spec:
      host: ${APPLICATION_DOMAIN}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      path: /
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
      port:
        targetPort: 3000-tcp
      wildcardPolicy: None
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${NAME}
      creationTimestamp: null
      labels:
        shared: "true"
      annotations:
        description: Keeps track of changes in the application image
    spec:
      lookupPolicy:
        local: false
      tags: []
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
    spec:
      strategy:
        type: Rolling
        maxSurge: 50%
        maxUnavailable: 0
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: ${NAME}:${VERSION}
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
        spec:
          containers:
            - name: ${NAME}
              image: ' '
              ports:
                - containerPort: 3000
                  protocol: TCP
              env:
                - name: MB_PASSWORD_COMPLEXITY
                  value: strong
                - name: MB_JETTY_HOST
                  value: 0.0.0.0
                - name: MB_DB_TYPE
                  value: postgres
                - name: MB_DB_DBNAME
                  value: metabase
                - name: MB_DB_PORT
                  value: "5432"
                - name: MB_DB_USER
                  value: metabase
                - name: MB_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: ${METABASE_SECRET_NAME}
                      key: postgres-password
                - name: MB_DB_HOST
                  value: ${NAME_DATABASE}${SUFFIX}
                - name: ENVIRONMENT_NAME
                  value: ${ENVIRONMENT_NAME}
                - name: MB_ENCRYPTION_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${METABASE_SECRET_NAME}
                      key: database-password
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: IfNotPresent
              capabilities: {}
          restartPolicy: Always
          dnsPolicy: ClusterFirst
