name: Build

on:
  push:
    branches:
      - main

env:
  INITIAL_TAG: latest
  TAG: dev
  SOURCE_REPOSITORY_URL: https://github.com/bcgov/dormant-site-reclamation-program.git
  SOURCE_REPOSITORY_REF: refs/pull/42/head

jobs:
  template:
    name: template
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: nginx
          - name: postgresql
          - name: frontend
          - name: backend
          - name: flyway
          - name: tusd
          - name: docgen
          - name: dbbackup
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          version: "4.6"
      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: Template build config
        run: |
          oc -n ${{secrets.NS_TOOLS}} process -f openshift4/templates/${{ matrix.config }}.bc.yaml --ignore-unknown-parameters=true \
          -p SOURCE_REPOSITORY_URL=${{env.SOURCE_REPOSITORY_URL}} \
          -p SOURCE_REPOSITORY_REF=${{env.SOURCE_REPOSITORY_REF}} \
          -p TAG=${{env.INITIAL_TAG}} \
          | oc -n ${{secrets.NS_TOOLS}} apply -f -

  build:
    name: build
    needs: template
    runs-on: ubuntu-20.04
    steps:
      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          version: "4.6"
      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: starting
        run: |
          echo "Starting ordered build..."
      - name: nginx build
        run: |
          oc start-build dsrp-nginx -n ${{secrets.NS_TOOLS}}
      - name: tusd build
        run: |
          oc start-build dsrp-tusd -n ${{secrets.NS_TOOLS}}
      - name: dbbackup build
        run: |
          oc start-build dsrp-dbbackup -n ${{secrets.NS_TOOLS}}
      - name: flyway build
        run: |
          oc start-build dsrp-flyway-migration-client -n ${{secrets.NS_TOOLS}}
      - name: backend build
        run: |
          oc start-build dsrp-python-backend-base -n ${{secrets.NS_TOOLS}} --wait
          oc start-build dsrp-python-backend -n ${{secrets.NS_TOOLS}}
      - name: frontend build
        run: |
          oc start-build dsrp-frontend-base -n ${{secrets.NS_TOOLS}} --wait
          oc start-build dsrp-frontend -n ${{secrets.NS_TOOLS}}
      - name: add dev tag
        run: |
          oc -n ${{secrets.NS_TOOLS}} tag \
          ${{ secrets.NS_TOOLS }}/${{ matrix.name }}:${{ env.INITIAL_TAG }} \
          ${{ secrets.NS_TOOLS }}/${{ matrix.name }}:${{ env.TAG }}

  rollout:
    name: rollout
    needs: build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: dsrp-nginx
          - name: dsrp-postgres
          - name: dsrp-frontend
          - name: dsrp-python-backend
          - name: dsrp-flyway-migration-client
          - name: dsrp-tusd
          - name: dsrp-docgen
          - name: dsrp-dbbackup
    steps:
      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          version: "4.6"
      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: rollout to dev
        if: matrix.name != 'dsrp-flyway-migration-client'
        run: |
          oc -n ${{ secrets.NS_DEV }} rollout latest ${{ matrix.name }}
